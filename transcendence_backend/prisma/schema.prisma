generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Social {
  id                Int      @id
  id_user           Int      @unique
  friend            Boolean
  blocked           Boolean
  first_interaction DateTime
  message_history   Int
  user              User     @relation(fields: [id_user], references: [id])
}

model User {
  id                  Int       @id @default(autoincrement())
  authentification    Boolean
  imageUrl            String?
  twoFactorEnabled    Boolean   @default(false)
  twoFactorAuthSecret String?   @db.VarChar
  username            String    @db.VarChar(100)
  games1              Game[]    @relation("games1")
  games2              Game[]    @relation("games2")
  messages            Message[] @relation("messages")
  roles               Role[]    @relation("roles")
  social              Social?
}

model Game {
  id         Int      @id
  id_user_1  Int
  id_user_2  Int
  score      Int
  match_date DateTime
  user1      User     @relation("games1", fields: [id_user_1], references: [id])
  user2      User     @relation("games2", fields: [id_user_2], references: [id])
}

model Message {
  id        Int      @id
  sender    Int
  message   String
  date      DateTime
  channelId Int
  channel   Channel  @relation(fields: [channelId], references: [id])
  user      User     @relation("messages", fields: [sender], references: [id])
}

model Channel {
  id              Int       @id
  name            String
  closed          Boolean
  created         DateTime
  role            Int
  message_history Int
  roleId          Int
  role_channel    Role      @relation(fields: [roleId], references: [id])
  messages        Message[]
}

model Role {
  id       Int       @id
  userId   Int
  owner    Boolean
  admin    Boolean
  join     DateTime
  channels Channel[]
  user     User      @relation("roles", fields: [userId], references: [id])
}
